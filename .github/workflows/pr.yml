name: PR

on:
  pull_request:
    paths-ignore:
      - 'ci/**'
      - '**/*.md'

env:
  IMAGE_NAME: docker-ecr-ap-base-image

jobs:
  docker-build-and-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build Docker image
        run: docker build -t ${{ env.IMAGE_NAME }}:latest . -q
        working-directory: build
      - name: Run Snyk monitoring
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
          image: ${{ env.IMAGE_NAME }}
          args: --file=./build/Dockerfile --severity-threshold=high --exclude-base-image-vulns --policy-path=./build/.snyk --org=dwp-dataworks -d

  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Black
        run: pip install black

      - name: Run black --check .
        id: check-formatting
        run: black --check .
        continue-on-error: true

      - name: If needed, commit black changes to the pull request
        if: ${{ steps.check-formatting.outcome == 'failure' }}
        run: |
          black .
          git config --global user.name ${{ secrets.CI_GITHUB_USERNAME }}
          git config --global user.email ${{ secrets.CI_GITHUB_EMAIL }}
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git checkout $GITHUB_HEAD_REF
          git commit -am "Fixup: Format Python code with Black"
          git push

  snyk-monitor-mgt-dev:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEV_ECR_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_ECR_AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.DEV_ECR_AWS_SESSION_TOKEN }}
          aws-region: eu-west-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Run Snyk monitoring
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
          image: ${{ steps.login-ecr.outputs.registry }}/docker-poc-gha-ecr:latest
          args: --file=./build/Dockerfile --policy-path=./build/.snyk --org=dwp-dataworks


